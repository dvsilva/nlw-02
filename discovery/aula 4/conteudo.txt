- Responsabilidades
    - Receber pedidos do cliente
    - Preparar os pedidos ( Regras de Neg√≥cio )
    - Enviar respostas
    - Lidar com dados da aplica√ß√£o
- Tecnologias
    - Linguagem: **[Javascript](https://developer.mozilla.org/en-US/docs/Web/javascript)**
    - Node.js ([https://nodejs.org](https://nodejs.org/en/))
    - Git Bash ([https://gitforwindows.org](https://gitforwindows.org/))
    - [Banco de dados](https://www.notion.so/nextlevelweekstarter/Banco-de-Dados-5486eedc84d245a289d6004d34597f22): [SQL](https://en.wikipedia.org/wiki/SQL)
    - SQLite

## üèÑüèΩ‚Äç‚ôÇÔ∏è Bora Codar!

- [ ]  Estrutura de pastas do projeto
- [ ]  Cria√ß√£o do servidor
    - [ ]  Instala√ß√£o dos m√≥dulos
    - Configura√ß√£o do servidor
        - [ ]  Criar e iniciar
        - [ ]  P√°gina inicial
        - [ ]  Arquivos est√°ticos
    - Rotas da aplica√ß√£o
        - [ ]  Requisi√ß√£o e Resposta
        - [ ]  O que s√£o verbos HTTP
        - [ ]  GET e POST
        - [ ]  Tipos de envio de dados
            - [ ]  Query Strings / Body
            - [ ]  Habilitar o express para utilizar o `req.body`
    - Template Engine
        - [ ]  Instalar e configurar `nunjucks`
        - [ ]  Renderizar
        - [ ]  Enviar dados para o html
        - [ ]  Usando Nunjucks
            - [ ]  include
            - [ ]  variables
            - [ ]  extends
            - [ ]  block
            - [ ]  if
            - [ ]  for
        - [ ]  Instalar extens√£o `nunjucks-template` nas extens√µes VSCode
    - Dados
        - [ ]  Enviando dados
        - [ ]  Recebendo dados
        - [ ]  Persistindo ( guardando ) banco de dados